package main

import (
	"context"
	"encoding/json"
	"os"
	"os/exec"
	"testing"

	"github.com/0xPolygon/cdk-contracts-tooling/docker"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestDeployRollupManagerEtrog(t *testing.T) {
	// Clean before start. This test needs a fresh L1 so the addressess used have deterministic nonces
	ctx := context.Background()
	if err := docker.StopMockL1Docker(); err != nil {
		panic(err)
	}
	if err := docker.StartMockL1Docker(ctx); err != nil {
		panic(err)
	}
	require.NoError(t, os.RemoveAll("./createRollupManagerOutput.example.json"))

	// Deploy DAC
	deployCmdArgs := []string{
		"run", "./cmd", "deploy-rm",
		"-l1", "local",
		"-w", walletAddr,
		"-wp", walletPass,
		"-skip-confirmation",
		"-parameters-file", "./createRollupManagerParams.example.json",
		"-o", "./createRollupManagerOutput.example.json",
	}
	out, err := exec.Command("go", deployCmdArgs...).CombinedOutput()
	require.NoError(t, err, string(out))

	// This values are generated by:
	// 1. git clone https://github.com/0xPolygonHermez/zkevm-contracts.git && cd zkevm-contracts
	// 2. git checkout v4.0.0-fork.7
	// 3. npm i
	// 4. npm run docker:contracts # This step will fail, but got to a point where is good enough for the purpose
	// 5. cat docker/deploymentOutput/deploy_output.json
	deployOutputFromContractsRepo := `
	{
		"polygonRollupManager": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
		"polygonZkEVMBridgeAddress": "0xFe12ABaa190Ef0c8638Ee0ba9F828BF41368Ca0E",
		"polygonZkEVMGlobalExitRootAddress": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
		"polTokenAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
		"zkEVMDeployerContract": "0xFbD07134824dDEa24E4ae414c18ecbFa98169A24",
		"deployerAddress": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
		"timelockContractAddress": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
		"deploymentBlockNumber": 43,
		"admin": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
		"trustedAggregator": "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
		"proxyAdminAddress": "0xfADB60b5059e31614e02083fF6C021a24C31c891",
		"salt": "0x0000000000000000000000000000000000000000000000000000000000000000"
	}
	`
	var expectedOutpu DeployRollupManagerOutput
	require.NoError(t, json.Unmarshal(
		[]byte(deployOutputFromContractsRepo), &expectedOutpu,
	))
	actualOutput, err := loadRollupManagerOutput("createRollupManagerOutput.example.json")
	require.NoError(t, err)

	// DeploymentCompleted doesn't exist on the contracts repo
	require.True(t, actualOutput.DeploymentCompleted)
	actualOutput.DeploymentCompleted = false
	// Deployment block is the only thing that is not deterministic
	assert.Greater(t, actualOutput.DeploymentBlockNumber, uint64(0))
	actualOutput.DeploymentBlockNumber = expectedOutpu.DeploymentBlockNumber
	// Check all the other fields
	assert.Equal(t, expectedOutpu, *actualOutput)
}
